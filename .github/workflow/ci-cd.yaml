name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Run data validation tests
      run: |
        python -m pytest tests/test_data.py -v

    - name: Run model tests
      run: |
        python -m pytest tests/test_model.py -v

    - name: Run API tests
      run: |
        python -m pytest tests/test_api.py -v

    - name: Run code quality checks
      run: |
        pip install black flake8
        black --check src/ tests/
        flake8 src/ tests/ --max-line-length=88 --extend-ignore=E203,W503

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/credit-default-model:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/credit-default-model:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/credit-default-model:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/credit-default-model:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to production
      run: |
        echo "Deploying to production environment"
        # –ó–¥–µ—Å—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä
        # –ù–∞–ø—Ä–∏–º–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É—è SSH:
        # ssh user@server "docker pull your-image && docker-compose up -d"

    - name: Send notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: üöÄ New version deployed!
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()